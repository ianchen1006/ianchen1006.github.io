<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pandas</title>
      <link href="/2020/06/04/andas/"/>
      <url>/2020/06/04/andas/</url>
      
        <content type="html"><![CDATA[<p>資料科學家的 pandas 實戰手冊：掌握 40 個實用數據技巧<br>(<a href="https://leemeng.tw/practical-pandas-tutorial-for-aspiring-data-scientists.html" target="_blank" rel="noopener">https://leemeng.tw/practical-pandas-tutorial-for-aspiring-data-scientists.html</a>)<br>DataFrame initiation</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pre-defined lists</span></span><br><span class="line">names = [<span class="string">'United States'</span>, <span class="string">'Australia'</span>, <span class="string">'Japan'</span>, <span class="string">'India'</span>, <span class="string">'Russia'</span>, <span class="string">'Morocco'</span>, <span class="string">'Egypt'</span>]</span><br><span class="line">dr =  [<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">True</span>]</span><br><span class="line">cpc = [<span class="number">809</span>, <span class="number">731</span>, <span class="number">588</span>, <span class="number">18</span>, <span class="number">200</span>, <span class="number">70</span>, <span class="number">45</span>]</span><br><span class="line"><span class="comment"># Import pandas as pd</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># Create dictionary my_dict with three key:value pairs: my_dict</span></span><br><span class="line">my_dict = &#123;<span class="string">'country'</span>:names,<span class="string">'drivers_right'</span>:dr, <span class="string">'cars_per_cap'</span>:cpc&#125;</span><br><span class="line"><span class="comment"># Build a DataFrame cars from my_dict: cars</span></span><br><span class="line">cars = pd.DataFrame(my_dict)</span><br><span class="line"><span class="comment"># Print cars</span></span><br><span class="line">print(cars)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Dictionaries</title>
      <link href="/2020/06/04/thon-Dictionaries/"/>
      <url>/2020/06/04/thon-Dictionaries/</url>
      
        <content type="html"><![CDATA[<p>*Hashmap in other programming language </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">movie = &#123;<span class="string">'name'</span>:<span class="string">'Saving Private Ryan'</span>, <span class="comment">#電影名稱</span></span><br><span class="line">         <span class="string">'year'</span>:<span class="number">1998</span>, <span class="comment">#電影上映年份</span></span><br><span class="line">         <span class="string">'director'</span>:<span class="string">'Steven Spielberg'</span>,<span class="comment">#導演</span></span><br><span class="line">         <span class="string">'Writer'</span>: <span class="string">'Robert Rodat'</span>, <span class="comment">#編劇</span></span><br><span class="line">         <span class="string">'Stars'</span>:[<span class="string">'Tom Hanks'</span>, <span class="string">'Matt Damon'</span>, <span class="string">'Tom Sizemore'</span>],<span class="comment">#明星</span></span><br><span class="line">         <span class="string">'Oscar '</span>:[<span class="string">'Best Director'</span>,<span class="string">'Best Cinematography'</span>,<span class="string">'Best Sound'</span>,<span class="string">'Best Film Editing'</span>,<span class="string">'Best Effects, Sound Effects Editing'</span>]</span><br><span class="line">         <span class="comment">#獲得的奧斯卡獎項&#125;</span></span><br></pre></td></tr></table></figure><p>Create a dictionary</p><ol><li>Using {}</li><li>dict</li></ol><p>Update in a dictionary</p><ol><li>update<ul><li>movie_1[‘star’] = “Tom Hank”</li></ul></li><li>Update()<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果一次要update很多value at a time 用update method就會比較方便</span></span><br><span class="line">temp_dict = &#123;<span class="string">'writer'</span>: <span class="string">'Robert Rodat'</span>, <span class="comment">#編劇</span></span><br><span class="line">         <span class="string">'stars'</span>:[<span class="string">'Tom Hanks'</span>, <span class="string">'Matt Damon'</span>, <span class="string">'Tom Sizemore'</span>],<span class="comment">#明星</span></span><br><span class="line">         <span class="string">'Oscar '</span>:[<span class="string">'Best Director'</span>,<span class="string">'Best Cinematography'</span>,<span class="string">'Best Sound'</span>,<span class="string">'Best Film Editing'</span>,<span class="string">'Best Effects, Sound Effects Editing'</span>]</span><br><span class="line">         &#125;</span><br><span class="line">movie_1.update(temp_dict)</span><br><span class="line">print(movie_1)</span><br></pre></td></tr></table></figure>Subset dictionary<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dictionary of dictionaries</span></span><br><span class="line">europe = &#123; <span class="string">'spain'</span>: &#123; <span class="string">'capital'</span>:<span class="string">'madrid'</span>, <span class="string">'population'</span>:<span class="number">46.77</span> &#125;,</span><br><span class="line">           <span class="string">'france'</span>: &#123; <span class="string">'capital'</span>:<span class="string">'paris'</span>, <span class="string">'population'</span>:<span class="number">66.03</span> &#125;,</span><br><span class="line">           <span class="string">'germany'</span>: &#123; <span class="string">'capital'</span>:<span class="string">'berlin'</span>, <span class="string">'population'</span>:<span class="number">80.62</span> &#125;,</span><br><span class="line">           <span class="string">'norway'</span>: &#123; <span class="string">'capital'</span>:<span class="string">'oslo'</span>, <span class="string">'population'</span>:<span class="number">5.084</span> &#125; &#125;</span><br><span class="line"><span class="comment"># Print out the capital of France</span></span><br><span class="line"><span class="comment"># Create sub-dictionary data. Create a dictionary, named data, with the keys 'capital' and 'population'</span></span><br><span class="line">data = dict()</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> europe:</span><br><span class="line">    data[europe[k][<span class="string">'capital'</span>]] = europe[k][<span class="string">'population'</span>]</span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure>source: <a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial-533b8d8d96f3" target="_blank" rel="noopener">https://medium.com/ccclub/ccclub-python-for-beginners-tutorial-533b8d8d96f3</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib</title>
      <link href="/2020/06/04/tplotlib/"/>
      <url>/2020/06/04/tplotlib/</url>
      
        <content type="html"><![CDATA[<p>Data visualization</p><ul><li>Very important in Data Analysis<ul><li>Explore data</li><li>Report insights</li></ul></li></ul><p>Matplotlib</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">year = [<span class="number">1950</span>, <span class="number">1970</span>, <span class="number">1990</span>, <span class="number">2010</span>]</span><br><span class="line">pop = [<span class="number">2.519</span>, <span class="number">3.692</span>, <span class="number">5.263</span>, <span class="number">6.972</span>]</span><br><span class="line">plt.plot(year, pop) // Plot</span><br><span class="line">plt.scatter(year, pop) // Scatter</span><br><span class="line">plt.hist(values, bins=<span class="number">3</span>) // Histogram</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>Matplotlib entire practice</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">year = [<span class="number">1950</span>, <span class="number">1951</span>, <span class="number">1952</span>, ..., <span class="number">2100</span>]</span><br><span class="line">pop = [<span class="number">2.538</span>, <span class="number">2.57</span>, <span class="number">2.62</span>, ..., <span class="number">10.85</span>]</span><br><span class="line"><span class="comment"># Add more data // simply use +</span></span><br><span class="line">year = [<span class="number">1800</span>, <span class="number">1850</span>, <span class="number">1900</span>] + year</span><br><span class="line">pop = [<span class="number">1.0</span>, <span class="number">1.262</span>, <span class="number">1.650</span>] + pop</span><br><span class="line">plt.plot(year, pop)</span><br><span class="line">plt.xlabel(<span class="string">'Year'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Population'</span>)</span><br><span class="line">plt.title(<span class="string">'World Population Projections'</span>)</span><br><span class="line">plt.yticks([<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">[<span class="string">'0'</span>, <span class="string">'2B'</span>, <span class="string">'4B'</span>, <span class="string">'6B'</span>, <span class="string">'8B'</span>, <span class="string">'10B]) // Customize for clarity and simplicity</span></span><br><span class="line"><span class="string">plt.show()</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Functions</title>
      <link href="/2020/06/03/ython-Functions/"/>
      <url>/2020/06/03/ython-Functions/</url>
      
        <content type="html"><![CDATA[<p>Method is a function which belongs to an object.</p><p>Functions</p><ul><li>Max(fam)</li><li>help(round)</li></ul><p>Methods</p><ul><li>fam.index(“mom”)</li></ul><p>Packages</p><ul><li>Functions and methods are powerful</li><li>All code in Python distribution?<ul><li>Huge code base: messy</li><li>Lots of code you won’t use</li><li>Maintenance problem</li></ul></li></ul><p>Numpy array</p><ul><li>import numpy as np<br>BMI Calculation<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># height and weight are available as a regular lists</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Calculate the BMI: bmi</span></span><br><span class="line">np_height_m = np.array(height_in) * <span class="number">0.0254</span></span><br><span class="line">np_weight_kg = np.array(weight_lb) * <span class="number">0.453592</span></span><br><span class="line">bmi = np_weight_kg / np_height_m ** <span class="number">2</span></span><br><span class="line"><span class="comment"># Create the light array</span></span><br><span class="line">light = bmi &lt; <span class="number">21</span></span><br><span class="line"><span class="comment"># Print out light</span></span><br><span class="line">print(light)</span><br><span class="line"><span class="comment"># Print out BMIs of all baseball players whose BMI is below 21</span></span><br><span class="line">print(bmi[light])</span><br></pre></td></tr></table></figure></li></ul><p>2D Numpy Array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># baseball is available as a regular list of lists</span></span><br><span class="line"><span class="comment"># Import numpy package</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Create np_baseball (2 cols)</span></span><br><span class="line">np_baseball = np.array(baseball)</span><br><span class="line"><span class="comment"># Print out the 50th row of np_baseball</span></span><br><span class="line">print(np_baseball[<span class="number">49</span>,:])</span><br><span class="line"><span class="comment"># Select the entire second column of np_baseball: np_weight_lb</span></span><br><span class="line">np_weight_lb=np_baseball[:,<span class="number">1</span>]</span><br><span class="line"><span class="comment"># Print out height of 124th player</span></span><br><span class="line">print(np_baseball[<span class="number">123</span>,<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>Statiscal method</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># np_baseball is available</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Create np_height_in from np_baseball</span></span><br><span class="line">np_height_in = np.array(np_baseball[:,<span class="number">0</span>])</span><br><span class="line">print(np_height_in)</span><br><span class="line"><span class="comment"># Print out the mean of np_height_in</span></span><br><span class="line">print(np.mean(np_height_in))</span><br><span class="line"><span class="comment"># Print out the median of np_height_in</span></span><br><span class="line">print(np.median(np_height_in))</span><br></pre></td></tr></table></figure><p>Blend it all together</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># heights and positions are available as lists</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Convert positions and heights to numpy arrays: np_positions, np_heights</span></span><br><span class="line">np_positions = np.array(positions)</span><br><span class="line">np_heights = np.array(heights)</span><br><span class="line"><span class="comment"># Heights of the goalkeepers: gk_heights</span></span><br><span class="line">gk_heights = np_heights[np_positions==<span class="string">'GK'</span>]</span><br><span class="line"><span class="comment"># Heights of the other players: other_heights</span></span><br><span class="line">other_heights = np_heights[np_positions!=<span class="string">'GK'</span>]</span><br><span class="line"><span class="comment"># Print out the median height of goalkeepers. Replace 'None'</span></span><br><span class="line">print(<span class="string">"Median height of goalkeepers: "</span> + str(np.median(gk_heights)))</span><br><span class="line"><span class="comment"># Print out the median height of other players. Replace 'None'</span></span><br><span class="line">print(<span class="string">"Median height of other players: "</span> + str(np.median(other_heights)))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Lists</title>
      <link href="/2020/06/02/ython-Lists/"/>
      <url>/2020/06/02/ython-Lists/</url>
      
        <content type="html"><![CDATA[<p>Subsetting lists</p><ul><li>fam=[‘liz’, 1.73, ‘emma’, 1.68, ‘mom’, 1.71, ‘dad’, 1.89]</li><li>fam[3:5]<ul><li>[1.68, ‘mom’]</li></ul></li><li>fam[-1]<ul><li>[1.89]</li></ul></li><li>fam[:4]<ul><li>[‘liz’, 1.73, ‘emma’, 1.68]</li></ul></li></ul><p>Manipulating Lists</p><ul><li>Change<ul><li>fam[0:2] = [“lisa”, 1.74]</li></ul></li><li>Add &amp; Remove<ul><li>fam_ext = fam + [“me”, 1.79]</li><li>del(fam[2])</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Basics</title>
      <link href="/2020/06/02/Hello-Python/"/>
      <url>/2020/06/02/Hello-Python/</url>
      
        <content type="html"><![CDATA[<p>Python Basics</p><ul><li>Variable<ul><li>Specic, case-sensitive name</li><li>Call up value through variable name</li><li>ex: 1.79 m - 68.7 kg</li></ul></li><li>Python Types<ul><li>Integer: int</li><li>Float: float</li><li>Boolean: bool</li><li>String: str</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
