<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python Functions</title>
      <link href="/2020/06/03/ython-Functions/"/>
      <url>/2020/06/03/ython-Functions/</url>
      
        <content type="html"><![CDATA[<p>Method is a function which belongs to an object.</p><p>Functions</p><ul><li>Max(fam)</li><li>help(round)</li></ul><p>Methods</p><ul><li>fam.index(“mom”)</li></ul><p>Packages</p><ul><li>Functions and methods are powerful</li><li>All code in Python distribution?<ul><li>Huge code base: messy</li><li>Lots of code you won’t use</li><li>Maintenance problem</li></ul></li></ul><p>Numpy array</p><ul><li>import numpy as np<br>BMI Calculation<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># height and weight are available as a regular lists</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Calculate the BMI: bmi</span></span><br><span class="line">np_height_m = np.array(height_in) * <span class="number">0.0254</span></span><br><span class="line">np_weight_kg = np.array(weight_lb) * <span class="number">0.453592</span></span><br><span class="line">bmi = np_weight_kg / np_height_m ** <span class="number">2</span></span><br><span class="line"><span class="comment"># Create the light array</span></span><br><span class="line">light = bmi &lt; <span class="number">21</span></span><br><span class="line"><span class="comment"># Print out light</span></span><br><span class="line">print(light)</span><br><span class="line"><span class="comment"># Print out BMIs of all baseball players whose BMI is below 21</span></span><br><span class="line">print(bmi[light])</span><br></pre></td></tr></table></figure></li></ul><p>2D Numpy Array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># baseball is available as a regular list of lists</span></span><br><span class="line"><span class="comment"># Import numpy package</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Create np_baseball (2 cols)</span></span><br><span class="line">np_baseball = np.array(baseball)</span><br><span class="line"><span class="comment"># Print out the 50th row of np_baseball</span></span><br><span class="line">print(np_baseball[<span class="number">49</span>,:])</span><br><span class="line"><span class="comment"># Select the entire second column of np_baseball: np_weight_lb</span></span><br><span class="line">np_weight_lb=np_baseball[:,<span class="number">1</span>]</span><br><span class="line"><span class="comment"># Print out height of 124th player</span></span><br><span class="line">print(np_baseball[<span class="number">123</span>,<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>Statiscal method</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># np_baseball is available</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Create np_height_in from np_baseball</span></span><br><span class="line">np_height_in = np.array(np_baseball[:,<span class="number">0</span>])</span><br><span class="line">print(np_height_in)</span><br><span class="line"><span class="comment"># Print out the mean of np_height_in</span></span><br><span class="line">print(np.mean(np_height_in))</span><br><span class="line"><span class="comment"># Print out the median of np_height_in</span></span><br><span class="line">print(np.median(np_height_in))</span><br></pre></td></tr></table></figure><p>Blend it all together</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># heights and positions are available as lists</span></span><br><span class="line"><span class="comment"># Import numpy</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># Convert positions and heights to numpy arrays: np_positions, np_heights</span></span><br><span class="line">np_positions = np.array(positions)</span><br><span class="line">np_heights = np.array(heights)</span><br><span class="line"><span class="comment"># Heights of the goalkeepers: gk_heights</span></span><br><span class="line">gk_heights = np_heights[np_positions==<span class="string">'GK'</span>]</span><br><span class="line"><span class="comment"># Heights of the other players: other_heights</span></span><br><span class="line">other_heights = np_heights[np_positions!=<span class="string">'GK'</span>]</span><br><span class="line"><span class="comment"># Print out the median height of goalkeepers. Replace 'None'</span></span><br><span class="line">print(<span class="string">"Median height of goalkeepers: "</span> + str(np.median(gk_heights)))</span><br><span class="line"><span class="comment"># Print out the median height of other players. Replace 'None'</span></span><br><span class="line">print(<span class="string">"Median height of other players: "</span> + str(np.median(other_heights)))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Lists</title>
      <link href="/2020/06/02/ython-Lists/"/>
      <url>/2020/06/02/ython-Lists/</url>
      
        <content type="html"><![CDATA[<p>Subsetting lists</p><ul><li>fam=[‘liz’, 1.73, ‘emma’, 1.68, ‘mom’, 1.71, ‘dad’, 1.89]</li><li>fam[3:5]<ul><li>[1.68, ‘mom’]</li></ul></li><li>fam[-1]<ul><li>[1.89]</li></ul></li><li>fam[:4]<ul><li>[‘liz’, 1.73, ‘emma’, 1.68]</li></ul></li></ul><p>Manipulating Lists</p><ul><li>Change<ul><li>fam[0:2] = [“lisa”, 1.74]</li></ul></li><li>Add &amp; Remove<ul><li>fam_ext = fam + [“me”, 1.79]</li><li>del(fam[2])</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python Basics</title>
      <link href="/2020/06/02/Hello-Python/"/>
      <url>/2020/06/02/Hello-Python/</url>
      
        <content type="html"><![CDATA[<p>Python Basics</p><ul><li>Variable<ul><li>Specic, case-sensitive name</li><li>Call up value through variable name</li><li>ex: 1.79 m - 68.7 kg</li></ul></li><li>Python Types<ul><li>Integer: int</li><li>Float: float</li><li>Boolean: bool</li><li>String: str</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
